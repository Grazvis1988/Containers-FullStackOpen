{"version":3,"sources":["services/blogs.js","components/Blog.js","services/login.js","components/Notification.js","components/LoginForm.js","components/CreationForm.js","components/togglable.js","App.js","index.js"],"names":["token","Blog","blog","user","removal","like","useState","viewState","setViewState","likes","setLikes","className","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","name","onClick","url","id","window","confirm","handleDeletion","baseUrl","getAll","a","config","headers","Authorization","axios","get","request","data","setToken","newToken","create","newObject","post","response","update","put","remove","delete","login","credentials","res","Notification","message","text","color","background","fontSize","borderStyle","borderRadius","padding","width","LoginForm","username","password","handleSubmit","handleUsernameChange","handlePasswordChange","onSubmit","type","value","onChange","CreationForm","createBlog","setTitle","setAuthor","setUrl","event","preventDefault","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","setUser","setUsername","setPassword","setMessage","blogFormRef","useRef","useEffect","blogService","then","b","loggedInUserJSON","localStorage","getItem","JSON","parse","addBlog","blogObject","current","newBlog","refactoredBlog","concat","setTimeout","handleLogin","loginService","setItem","stringify","console","log","filter","handleLikes","catch","err","error","clear","location","reload","sort","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e049462.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const request = await axios.get(baseUrl, config)\n    return request.data\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\n    return request.data\n}\n\nconst remove = async (id) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const request = await axios.delete(`${baseUrl}/${id}`, config)\n    return request.data\n}\n\n\n\nexport default { getAll, setToken, create, update, remove }\n","import React, { useState } from 'react'\n//import blogService from '../services/blogs'\n\n\nconst Blog = ({ blog, user, removal, like }) => {\n    const [viewState, setViewState] = useState(true)\n    const [likes, setLikes] = useState(blog.likes)\n    //const [likes, setLikes] = useState(blog.likes)\n    //    const handleLikes = async (blog) => {\n    //       const newblog =\tawait blogService.update(blog.id, {\n    //          user: blog.user.id,\n    //         likes: likes + 1,\n    //        author: blog.author,\n    //       title: blog.title,\n    //      url: blog.url\n    // }).catch(err => { console.error(err) })\n    //  setLikes(newblog.likes)\n    //   }\n    const handleDeletion = (id) => {\n        if (user.name === blog.user.name) {\n            return (\n                <div>\n                    <button onClick={() => window.confirm('Are you sure you want to delete this blog post?') && removal(id)}>remove</button>\n                </div>\n            )\n        }\n\n    }\n\n\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        border: 'solid',\n        borderWidth: 1,\n        marginBottom: 5\n    }\n\n    return (\n        <div className='BlogDiv' style={blogStyle}>\n            {\n                viewState ?\n                    <div className='InfoDiv'>\n                        {blog.title} by {blog.author} <button name='view' onClick={() => setViewState(!viewState)}>view</button>\n                    </div>\n                    :\n                    <div className='BlogComponent'>\n                        {blog.title} by {blog.author} <button onClick={() => setViewState(!viewState)}>hide</button>\n                        <div>{blog.url}</div>\n                        <div className='likes'>likes: {likes}<button onClick={() => {\n                            like(blog, likes)\n                            setLikes(likes + 1)\n                        }}>like</button></div>\n                        <div>{blog.user.name}</div>\n                        {handleDeletion(blog.id)}\n                    </div>\n            }\n        </div>\n    )}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const res = await axios.post(baseUrl, credentials)\n    return res.data\n}\n\nexport default { login }\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if ( message.text === null ){\n        return null\n    }\n    return (\n        <div className=\"error\" style={{\n            color: `${message.color}`,\n            background: 'lightgrey',\n            fontSize: '20px',\n            borderStyle: 'solid',\n            borderRadius: '5px',\n            padding: '10px',\n            marginBottom: '10px',\n            width: '20%'\n        }}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default Notification\n","import Notification from './Notification'\nimport React from 'react'\n\nconst LoginForm = ({\n    username,\n    password,\n    handleSubmit,\n    handleUsernameChange,\n    handlePasswordChange,\n    message,\n}) => (\n    <div className=\"loginForm\">\n        <form onSubmit = {handleSubmit}>\n            <h2>log in to application</h2>\n            <Notification message = {message} />\n            <div>\n\t\tusername <input\n                    id = 'username'\n                    type = 'text'\n                    value = {username}\n                    name = 'Username'\n                    onChange = {handleUsernameChange}\n                />\n            </div>\n\n            <div>\n\t\tpassword\n                <input\n                    id = 'password'\n                    type = 'password'\n                    value = {password}\n                    name = 'password'\n                    onChange = {handlePasswordChange}\n                />\n            </div>\n            <button type = 'submit'>login</button>\n        </form>\n    </div>\n)\n\nexport default LoginForm\n","import React, { useState } from 'react'\n\nconst CreationForm = ({ createBlog }) => {\n\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const handleCreation = (event) => {\n        event.preventDefault()\n        createBlog({\n            title: title,\n            author: author,\n            url: url,\n        })\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n    }\n\n    return (\n        <div className='FormDiv'>\n            <form onSubmit={handleCreation}>\n                <h2>Create new</h2>\n                <div>\n\t\ttitle:\n                    <input\n                        id = 'title'\n                        type = 'text'\n                        value = {title}\n                        name = 'title'\n                        onChange={({ target }) => setTitle(target.value)}\n                    />\n                </div>\n\n                <div>\n\t\tauthor:\n                    <input\n                        id = 'author'\n                        type = 'text'\n                        value = {author}\n                        name = 'author'\n                        onChange={({ target }) => setAuthor(target.value)}\n                    />\n                </div>\n\n                <div>\n\t\turl:\n                    <input\n                        id = 'url'\n                        type = 'text'\n                        value = {url}\n                        name = 'url'\n                        onChange={({ target }) => setUrl(target.value)}\n                    />\n                </div>\n                <button type='submit'>create</button>\n            </form>\n        </div>\n    )\n\n}\n\nexport default CreationForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef(( props, ref ) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none': '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle( ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport CreationForm from './components/CreationForm'\nimport Togglable from './components/togglable'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [message, setMessage] = useState({ text: null, color: 'blank' })\n\n    const blogFormRef = useRef()\n\n\n    useEffect(() => {\n        user !== null && blogService.getAll().then(b =>\n            setBlogs( b )\n        )\n    }, [user])\n\n    useEffect(() => {\n        const loggedInUserJSON = window.localStorage.getItem('LoggedBlogUser')\n        if (loggedInUserJSON) {\n            const user = JSON.parse(loggedInUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    },[])\n\n    const addBlog = async (blogObject) => {\n        blogFormRef.current.toggleVisibility()\n        const newBlog = await blogService.create(blogObject)\n        const refactoredBlog = {\n            title: newBlog.title,\n            author: newBlog.author,\n            url: newBlog.url,\n            likes: newBlog.likes,\n            id: newBlog.id,\n            user: {\n                username: user.username,\n                name: user.name,\n                id: newBlog.id,\n            }\n        }\n        setBlogs(blogs.concat(refactoredBlog))\n\n        setMessage({ text: `${blogObject.title}, by ${blogObject.author} added`, color: 'green' })\n        setTimeout(() => {\n            setMessage({ text: null, color: 'blank' })\n        }, 5000)\n    }\n\n\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n            const user = await loginService.login({\n                username,\n                password,\n            })\n\n            window.localStorage.setItem(\n                'LoggedBlogUser', JSON.stringify(user)\n            )\n\n            blogService.setToken(user.token)\n            setUser(user)\n            setUsername('')\n            setPassword('')\n        } catch (err) {\n            console.log(err)\n            console.log('Wrong credentials')\n            setMessage({ text: 'Wrong username or password', color: 'red' })\n            setTimeout(() => {\n                setMessage( { text: null, color: 'blank' } )\n            }, 5000)\n            setUsername('')\n            setPassword('')\n        }\n\n    }\n    const loginForm = () => (\n        <Togglable buttonLabel='log in'>\n            <LoginForm\n                username={username}\n                password={password}\n                handleSubmit={handleLogin}\n                handleUsernameChange={({ target }) => setUsername(target.value)}\n                handlePasswordChange={({ target }) => setPassword(target.value)}\n                message={message}\n            />\n        </Togglable>\n    )\n\n    const creationForm = () => (\n        <Togglable buttonLabel='create new blog' ref={blogFormRef}>\n            <CreationForm createBlog={addBlog} />\n        </Togglable>\n    )\n\n    const handleDeletion = async (id) => {\n        await blogService.remove(id)\n        setBlogs(blogs.filter(blog => blog.id !== id))\n    }\n    const handleLikes = async (blog, likes) => {\n        await blogService.update(blog.id, {\n            user: blog.user.id,\n            likes: likes + 1,\n            author: blog.author,\n            title: blog.title,\n            url: blog.url\n        }).catch(err => { console.error(err) })\n    }\n\n    return (\n        <div>\n            {\n                user === null ?\n                    loginForm()\n                    :\n\n                    <div>\n                        <h2>blogs</h2>\n                        <Notification message = {message} />\n                        <p>{user.name} loged in <button name='logout' onClick={() => {\n                            setUser(null)\n                            window.localStorage.clear()\n\n                            // for some reason after change in number of likes upon logging out and logging back in the number of likes is back in its previous state but after reloading the window only then app shows that it is changed, even if it was changed in MongoDb database. so that's way I'm reloading here. \\/\n                            window.location.reload()\n                        }}>logout</button></p>\n\n                        { creationForm() }\n                        {blogs.sort((a,b) => b.likes - a.likes)\n                            .map(blog =>\n                                <Blog key={blog.id} blog={blog} user={user} removal={handleDeletion} like={handleLikes}/>\n                            )}\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}